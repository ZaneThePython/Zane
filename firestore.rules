rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection rules
    match /users/{userId} {
      allow read: if isOwner(userId); // Only allow users to read their own document
      allow create: if isAuthenticated() && request.auth.uid == userId; // Allow creation during signup
      allow update: if isOwner(userId);
      allow delete: if false;
    }

    // Posts collection rules
    match /posts/{postId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // Replies collection rules
    match /replies/{replyId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // Likes collection rules
    match /likes/{likeId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // Update log collection rules
    match /updateLog/{updateId} {
      allow read: if true;
      allow write: if false;
    }
  }
} 